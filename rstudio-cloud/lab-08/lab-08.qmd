---
#########################################################
# Steps to complete this lab:
#   1. Add your name to the author field of the yaml header
#   2. Fill in the code chunks and use inline code to answer the questions 
#   3. Click on "Render" directly above to render output (or Ctrl/Cmd-Shift-K)
#   4. Repeat steps 2-3 until you are satisfied with the final product
#   5. Download the resulting file lab-xx.pdf
#   6. Upload lab-xx.pdf to canvas
# Note: this file may not Render properly until it is (partially) completed
# Reminder: to get around this and work interactively, you can run code chunks on their own
# You can do this using keyboard shortcuts, icons in each chunk, or Run at the top right of this pane
#########################################################
title: "Lab-08"
author: "Write your name here"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format: pdf
urlcolor: blue
---

```{r setup, include = FALSE}
library(tidyverse)
library(ggridges)

# omit warnings and center plots by default
library(knitr)
opts_chunk$set(warning = FALSE, message = FALSE,
               fig.align = "center")
```

# Preface

The goal of this assignment is to help you gain more familiarity with using **ggplot** to visualize distributions. In this lab we provide less scaffolding and more open-ended questions. As always, please come to office hours and reach out to your teaching staff if you have any questions.

## Data

We will work with data on NYC Yellow cab trip data in January 2021 from [TCL](https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page). We have seen these data in our Prelim 1. Start by importing these data and assigning them to a name.
```{r}
trips <- read_csv("taxi-trips.csv") 
```


{{< pagebreak >}}
## 1. We'll start by making some simple visualizations of the distribution of the trip distance. First, make a histogram. Make the first bar start right at zero, customize the bins or binwidth to suit your tastes, and use a named color to delineate between bars. 

```{r}

```


{{< pagebreak >}}
## 2. Make a density plot of the distribution of the trip distance.

```{r}

```


{{< pagebreak >}}
## 3. Use the data frame `speeds` to plot the density of trip speeds, faceting by the hour during which the trip began. Use `geom_density`'s `fill` argument to fill the densities with a named color or hex code of your choice. Arrange the facets so they are in 6 rows and 4 columns. What, if any, conclusions can you draw from the resulting plot?
<!-- Note: We provided some code that calculates the speed and hour of day during which each trip originated, because we haven't had time to cover working with dates and times yet. On future assignments you may be expected to do similar operations and calculations without being provided answers. -->

```{r}
speeds <- trips |> 
  mutate(duration = dropoff_datetime - pickup_datetime,
         hour = hour(pickup_datetime)) |> 
  filter(duration > 0 & trip_distance > 0) |> 
  select(pickup_datetime, dropoff_datetime, hour, trip_distance, duration) |> 
  mutate(speed = trip_distance/(as.numeric(duration)/60/60)) |> 
  filter(speed < 55) # filter out 55+ miles per hour


```


{{< pagebreak >}}
## 4. Make an overlapping density plot of the distribution of speeds. Fill by hour, treating hour as a categorical variable by encoding it as a factor (see `?as_factor()`). Adjust the transparency to make it more readable.
```{r}

```


{{< pagebreak >}}
## 5. Reproduce the plot above as a ridgeline plot instead of an overlapping density plot. Fill all the densities with a single named color of your choice, and use `color` to make the density lines themselves white. What, if any, conclusions can you draw from the resulting plot?

```{r}

```



{{< pagebreak >}}
## 6. Comparing your plots from questions 3, 4, and 5, which one do you think is the most effective visualization? Why?

